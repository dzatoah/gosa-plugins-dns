<?php

class faiHook extends plugin
{
  /* CLI vars */
  var $cli_summary      = "Manage server basic objects";
  var $cli_description  = "Some longer text\nfor help";
  var $cli_parameters   = array("eins" => "Eins ist toll", "zwei" => "Zwei ist noch besser");

  /* attribute list for save action */
  var $ignore_account   = TRUE;

  /* Attributes for this Object */
  var $attributes       = array("cn","description");

  /* ObjectClasses for this Object*/
  var $objectclasses    = array("top","FAIclass","FAIhook");

  /* Class name of the Ldap ObjectClass for the Sub Object */
  var $subClass         = "FAIhookEntry";
  var $subClasses       = array("top","FAIclass","FAIhookEntry");

  /* Class name of the php class which allows us to edit a Sub Object */
  var $subClassName     = "faiHookEntry";      

  /* Attributes to initialise for each subObject */
  var $subAttributes    = array("cn","description","FAItask","FAIscript"); 
  var $sub64coded       = array();

  /* Specific attributes */
  var $cn               = "";       // The class name for this object
  var $description      = "";       // The description for this set of partitions
  var $is_dialog        = false;    // specifies which buttons will be shown to save or abort
  var $dialog           = NULL;     // a dialog, e.g. new disk dialog
  var $SubObjects       = array();  // All leafobjects of this object

  var $FAIstate         = "";  

  function faiHook ($config, $dn= NULL)
  {
    /* Load Attributes */
    plugin::plugin ($config, $dn);

    $this->acl ="#all#";

    /* If "dn==new" we try to create a new entry
     * Else we must read all objects from ldap which belong to this entry.
     */
    if($dn != "new"){
      $this->dn =$dn;
    
      /* Set acls 
       */
      $ui   = get_userinfo();
      $acl  = get_permissions ($this->dn, $ui->subtreeACL);
      $acli = get_module_permission($acl, "FAIclass", $this->dn);
      $this->acl=$acli;

      /* Get FAIstate
       */
      if(isset($this->attrs['FAIstate'][0])){
        $this->FAIstate = $this->attrs['FAIstate'][0];
      }

      /* Read all leaf objects of this object (For FAIscript this would be FAIscriptEntry)
       */
      $ldap     = $this->config->get_ldap_link();
      $ldap->cd ($this->dn);
      $attrs_to_search = $this->subAttributes;
      $attrs_to_search[] = "FAIstate";
      $ldap->search("(&(objectClass=FAIclass)(objectClass=".$this->subClass."))",$attrs_to_search);

      while($object = $ldap->fetch()){

        /* Skip objects, that are tagged as removed */
        if(isset($object['FAIstate'][0])){
          if(preg_match("/removed$/",$object['FAIstate'][0])){
            continue;
          }
        }

        /* Set status for save management */
        foreach($this->subAttributes as $attrs){
          if(!isset($object[$attrs][0])){
            $this->SubObjects[$object['cn'][0]][$attrs]="";
          }else{
            $this->SubObjects[$object['cn'][0]][$attrs]=$object[$attrs][0];
          }
        }

        $this->SubObjects[$object['cn'][0]]['status']      = "edited";
        $this->SubObjects[$object['cn'][0]]['dn']          = $object['dn'];

        foreach($this->sub64coded as $codeIt){
          $this->SubObjects[$object['cn'][0]][$codeIt]=base64_decode($this->SubObjects[$object['cn'][0]][$codeIt]);
        }

        foreach($this->subAttributes as $attrs){
          $this->SubObjects[$object['cn'][0]][$attrs]=addslashes($this->SubObjects[$object['cn'][0]][$attrs]);
        }
        $this->SubObjects[$object['cn'][0]]['FAIscript']   = addslashes( $ldap->get_attribute($object['dn'], "FAIscript",$r_array=0));
      }
    }
  }

  function getUsedFAItask($cn)
  {
    $ret = array();
    foreach($this->SubObjects as $name => $class){
      if($class['cn'] == $cn){
        continue;
      } 
      if($class['status'] != "delete"){
        $ret[$class['FAItask']] = $class['FAItask'];
      }
    }
    return($ret);
  }

  function execute()
  {
    /* Call parent execute */
    plugin::execute();

    /* Fill templating stuff */
    $smarty= get_smarty();
    $display= "";

    /* New Listhandling
     */
    $once = true;
    foreach($_POST as $name => $value){
      if(preg_match("/^editscript_/",$name)&&($once)){
        $once = false;
        $entry = preg_replace("/^editscript_/","",$name);
        $entry = base64_decode(preg_replace("/_.*/","",$entry));
        $this->dialog= new $this->subClassName($this->config,$this->dn,$this->SubObjects[$entry]);
        $this->dialog->acl = $this->acl;
        $_SESSION['objectinfo'] = $this->SubObjects[$entry]['dn'];
        $this->dialog->parent = &$this;
        $this->is_dialog=true;
      }
      if(preg_match("/^deletescript_/",$name)&&($once)){
        $once = false;
        $entry = preg_replace("/^deletescript_/","",$name);
        $entry = base64_decode(preg_replace("/_.*/","",$entry));
        if($this->SubObjects[$entry]['status'] == "edited"){
          $this->SubObjects[$entry]['status']= "delete";
        }else{
          unset($this->SubObjects[$entry]);
        }
      }
    }
    ///// Ende new list handling

    /* Add new sub object */
    if(isset($_POST['AddSubObject'])){
      $this->dialog= new $this->subClassName($this->config,"new");
      $this->dialog->acl = $this->acl;
      $this->dialog->parent = &$this;
      $this->is_dialog=true;
    }

    if($this->dn != "new"){
      $_SESSION['objectinfo']= $this->dn;
    }
    /* Edit selected Sub Object */
    if((isset($_POST['EditSubObject']))&&(isset($_POST['SubObject']))){
      $hook = $_POST['SubObject'][0];

      $this->dialog= new $this->subClassName($this->config,$this->dn,$this->SubObjects[$hook]);
      $this->dialog->acl = $this->acl;
      $this->dialog->parent = &$this;
      $_SESSION['objectinfo'] = $this->SubObjects[$hook]['dn'];
      $this->is_dialog=true;
    }

    /* Remove Sub object */
    if((isset($_POST['DelSubObject']))&&(isset($_POST['SubObject']))){
      foreach($_POST['SubObject'] as $hook){
        if($this->SubObjects[$hook]['status'] == "edited"){
          $this->SubObjects[$hook]['status']= "delete";
        }else{
          unset($this->SubObjects[$hook]);
        }
      }
    }

    /* Save Dialog */
    if(isset($_POST['SaveSubObject'])){

      /* Perform post check*/
      $this->dialog->save_object();

      /* Get messages */
      $msgs = $this->dialog->check();

      /* print errors */
      if(count($msgs)>0){
        foreach($msgs as $msg){
          print_red($msg);
        }
      }else{

        /* Get return object */
        $obj = $this->dialog->save();
        if(isset($obj['remove'])){

          /* Depending on status, set new status */
          if($this->SubObjects[$obj['remove']['from']]['status']=="edited"){
            $this->SubObjects[$obj['remove']['from']]['status'] = "delete";
          }elseif($this->SubObjects[$obj['remove']['from']]['status']=="new"){
            unset($this->SubObjects[$obj['remove']['from']]);
          }
          $obj['status'] = "new";
          $this->SubObjects[$obj['remove']['to']] = $obj;
          unset($this->SubObjects[$obj['remove']['to']]['remove']);
        }else{
          $this->SubObjects[$obj['cn']]=$obj;
        }
        $this->is_dialog=false;
        unset($this->dialog);
        $this->dialog=NULL;
      }
    }

    /* Sort entries */
    $tmp = $keys = array();
    foreach($this->SubObjects as $key => $entry){
      $keys[$key]=$key;
    }
    natcasesort($keys);
    foreach($keys as $key){
      $tmp[$key]=$this->SubObjects[$key];
    }
    $this->SubObjects = $tmp;

    /* Cancel Dialog */
    if(isset($_POST['CancelSubObject'])){
      $this->is_dialog=false; 
      unset($this->dialog);
      $this->dialog=NULL;
    }

    /* Print dialog if $this->dialog is set */
    if($this->dialog){
      $this->dialog->save_object();
      $display = $this->dialog->execute();
      return($display);
    }



    /* Divlist            added 28.02.2006
       Containing FAIscripts
     */

    $divlist = new divSelectBox("FAIhooks");
    $divlist->setHeight(400);
    if((chkacl($this->acl,"cn")!="") || ($this->FAIstate == "freeze")){
      $img_edit = "<input type='image' src='images/edit.png'      name='editscript_%s'    title='"._("edit")."' alt='"._("edit")."'>";
      $img_remo = ""; 
    }else{
      $img_edit = "<input type='image' src='images/edit.png'      name='editscript_%s'    title='"._("edit")."' alt='"._("edit")."'>";
      $img_remo = "<input type='image' src='images/edittrash.png' name='deletescript_%s'  title='"._("delete")."' alt='"._("delete")."'>";
    }

    foreach($this->getList(true) as $key => $name){

      if(($this->SubObjects[$key]['status'] == "new") || ($this->SubObjects[$key]['dn'] == "new")){
        $down = "";
      }else{
        $down = "<a href='getFAIscript.php?id=".base64_encode($name['dn'])."'>
          <img src='images/save.png' alt='"._("Download")."' title='"._("Download")."' border=0>
          </a>";
      }

      $divlist->AddEntry(array( array("string"=>$name['name']),
            array("string"=>$down , "attach" => "style='width:20px;'"),
            array("string"=>str_replace("%s",base64_encode($key),$img_edit.$img_remo),
              "attach"=>"style='border-right: 0px;width:50px;text-align:right;'")));
    }
    $smarty->assign("Entry_divlist",$divlist->DrawList());
    /* Divlist creation complete
     */

    $smarty->assign("SubObjects",$this->getList());

    /* Magic quotes GPC, escapes every ' " \, to solve some security risks
     * If we post the escaped strings they will be escaped again
     */
    foreach($this->attributes as $attrs){
      if(get_magic_quotes_gpc()){
        $smarty->assign($attrs,stripslashes($this->$attrs));
      }else{
        $smarty->assign($attrs,($this->$attrs));
      }
    }

    foreach($this->attributes as $attr){
      $smarty->assign($attr."ACL",chkacl($this->acl,$attr));
    }

    $display.= $smarty->fetch(get_template_path('faiHook.tpl', TRUE));
    return($display);
  }

  /* Generate listbox friendly SubObject list
   */
  function getList($use_dns=false){
    $a_return=array();
    foreach($this->SubObjects as $obj){
      if($obj['status'] != "delete"){
        if($use_dns){
          if((isset($obj['description']))&&(!empty($obj['description']))){
            $a_return[$obj['cn']]['name']= $obj['cn']." [".$obj['description']."]";
          }else{
            $a_return[$obj['cn']]['name']= $obj['cn'];
          }
          $a_return[$obj['cn']]['dn']= $obj['dn'];
        }else{
          if((isset($obj['description']))&&(!empty($obj['description']))){
            $a_return[$obj['cn']]= $obj['cn']." [".$obj['description']."]";
          }else{
            $a_return[$obj['cn']]= $obj['cn'];
          }
        }
      }
    }
    return($a_return);
  }


  /* Delete me, and all my subtrees
   */
  function remove_from_parent()
  {
    $ldap = $this->config->get_ldap_link();
    $ldap->cd ($this->dn);

    $use_dn = str_ireplace( get_release_dn($this->dn), $_SESSION['faifilter']['branch'], $this->dn);
    if($_SESSION['faifilter']['branch'] == "main"){
      $use_dn = $this->dn;
    }

    prepare_to_save_FAI_object($use_dn,array(),true);

    foreach($this->SubObjects as $name => $obj){
      $use_dn = str_ireplace( get_release_dn($this->dn), $_SESSION['faifilter']['branch'], $obj['dn']);
      if($_SESSION['faifilter']['branch'] == "main"){
        $use_dn = $obj['dn'];
      }
      prepare_to_save_FAI_object($use_dn,array(),true);
    }
    $this->handle_post_events("remove");    
  }


  /* Save data to object 
   */
  function save_object()
  {
    if((isset($_POST['FAIhook_posted'])) && ($this->FAIstate != "freeze")){
      plugin::save_object();
      foreach($this->attributes as $attrs){
        if(isset($_POST[$attrs])){
          $this->$attrs = $_POST[$attrs];
        }
      }
    }
  }


  /* Check supplied data */
  function check()
  {
    /* Call common method to give check the hook */
    $message= plugin::check();

    return ($message);
  }


  /* Save to LDAP */
  function save()
  {
    plugin::save();

    $ldap = $this->config->get_ldap_link();

    prepare_to_save_FAI_object($this->dn,$this->attrs);
    show_ldap_error($ldap->get_error(), sprintf(_("Saving of FAI/hook with dn '%s' failed."),$this->dn));

    /* Do object tagging */
    $this->handle_object_tagging();

    $ldap->cd($this->dn);

    /* Prepare FAIscriptEntry to write it to ldap
     * First sort array.
     *  Because we must delete old entries first.
     * After deletion, we perform add and modify 
     */
    $Objects = array();
    foreach($this->SubObjects as $name => $obj){
      if($obj['status'] == "delete"){
        $Objects[$name] = $obj; 
      }
    }
    foreach($this->SubObjects as $name => $obj){
      if($obj['status'] != "delete"){
        $Objects[$name] = $obj; 
      }
    }

    foreach($Objects as $name => $obj){

      foreach($this->sub64coded as $codeIt){
        $obj[$codeIt]=base64_encode(stripslashes($obj[$codeIt]));
      }

      $tmp = array();
      foreach($this->subAttributes as $attrs){
        if(empty($obj[$attrs])){
          $obj[$attrs] = array();
        }
        if(!is_array($obj[$attrs])){
          $tmp[$attrs] = stripslashes($obj[$attrs]);
        }else{
          $tmp[$attrs] = $obj[$attrs];
        }
      }    

      $tmp['objectClass'] = $this->subClasses;

      $sub_dn = "cn=".$obj['cn'].",".$this->dn;

      if($obj['status']=="new"){
        $ldap->cat($sub_dn,array("objectClass"));
        if($ldap->count()){
          $obj['status']="edited";
        }
      }

      /* Check if gosaAdministrativeUnitTag is required as object class */
      if($obj['status'] == "edited"){
        $ldap->cat($sub_dn,array("objectClass"));
        $attrs = $ldap->fetch();
        if(isset($attrs['objectClass'])){
          if(in_array_ics("gosaAdministrativeUnitTag",$attrs['objectClass'])){
            $tmp['objectClass'][] = "gosaAdministrativeUnitTag";
          }
        }
      }

      if($obj['status'] == "delete"){
        prepare_to_save_FAI_object($sub_dn,array(),true);
        $this->handle_post_events("remove");
      }elseif($obj['status'] == "edited"){
        prepare_to_save_FAI_object($sub_dn,$tmp);
        $this->handle_post_events("modify");
      }elseif($obj['status']=="new"){
        prepare_to_save_FAI_object($sub_dn,$tmp);
        $this->handle_post_events("add");
      }
      $this->handle_object_tagging($sub_dn, $this->gosaUnitTag);
    }
  }
}

// vim:tabstop=2:expandtab:shiftwidth=2:filetype=php:syntax:ruler:
?>
